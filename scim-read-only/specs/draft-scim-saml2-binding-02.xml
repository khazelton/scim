<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd'>
<?xml-stylesheet type='text/xsl' 'rfc2629.xslt ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
(Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="no" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->                                                                                         
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
(using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std"
docName="draft-scim-saml2-binding-01"
ipr="full3667">

<!-- trust200902 -->
<!-- category values: std, bcp, info, exp, and historic
ipr values: full3667, noModification3667, noDerivatives3667
you can add the attributes updates="NNNN" and obsoletes="NNNN"
they will automatically be output with "(if approved)" -->

<!-- ***** FRONT MATTER ***** -->

<front>
<!-- The abbreviated title is used in the page header - it is only necessary if the
full title is longer than 39 characters -->

<title abbrev="">SAML 2.0 Binding for SCIM</title>

<!-- add 'role="editor"' below for the editors if appropriate -->
<author fullname="Paul Madsen" initials="P." role="editor" surname="Madsen">
<organization>Ping Identity Corp.</organization>
<address>
<email>pmadsen@pingidentity.com</email>
</address>
</author>


<date month="April" year="2011"/>

<!-- If the month and year are both specified and are the current ones, xml2rfc will fill
in the current day for you. If only the current year is specified, xml2rfc will fill
in the current day and month for you. If the year is not the current one, it is
necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
purpose of calculating the expiry date).  With drafts it is normally sufficient to
specify just the year. -->

<!-- Meta-data Declarations -->

<area>Internet</area>

<workgroup>&nbsp;</workgroup> 

<!-- WG name at the upperleft corner of the doc,
IETF is fine for individual submissions.
If this element is not present, the default is "Network Working Group",
which is used by the RFC Editor as a nod to the history of the IETF. -->

<keyword>SCIM</keyword>
<keyword>SAML</keyword>

<!-- Keywords will be incorporated into HTML output
files in a meta tag but they have no effect on text or nroff
output. If you submit your draft to the RFC Editor, the
keywords will be used for the search engine. -->

<abstract>
<t>This specification defines a binding of the Simple Cloud Identity Management (SCIM) schema to the Security Assertion Markup Language (SAML).
</t>
</abstract>
</front>

<middle>
<section title="Introduction">


<t>The <xref target="scim-core">Simple Cloud Identity Management (SCIM) core schema</xref> defines a platform neutral data and extension model for 
representing users of cloud services. SCIM core also defines XML &amp; JSON serializations of the abstract schema. This specification 
defines a binding of SCIM schema to <xref target="OASIS.saml-core-2.0-os">SAML</xref> messages and assertions - allowing SCIM instances to be carried on SAML SSO - as defined 
in the <xref target="OASIS.saml-profiles-2.0-os">SAML Web SSO profile</xref>.
</t>
<t>Carrying user attributes on SSO messages enables a just-in-time provisioning model, whereby a user's attributes are provided to 
the cloud service only at time of first access - rather than a priori. This can greatly simplify the integration work required in 
scenarios where users need to be dynamically provisioned, by combining the account creation and single sign-on processes into a single message.
</t>

           <section title="Notational Conventions">
                <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
                    "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
                    document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.
                </t>
                <t>
                    Unless otherwise noted, all the protocol parameter names and values are case sensitive.
                </t>
            </section>
            
</section>

<section title="Binding to SAML">

<t>Binding SCIM to SAML SSO involves the following aspects:
</t>

<t>
              <list style='symbols'>
                <t>Mapping SCIM user attributes into SAML attributes</t>
                <t>Using SAML SSO Assertion attributes to carry SCIM user attributes</t>
                <t>Using SAML AttributeQuery to retrieve SCIM user attributes</t>
                <t>Using SAML metadata to advertise supported/desired SCIM attributes</t>
              </list>
</t>



	<section title="Mapping SCIM user attributes into SAML attributes">
		<t>This section defines a a mapping between SCIM schema elements (and associated attributes) and SAML attributes - the value of the SCIM
		schema element becoming the value of the SAML attribute.</t>
		
		<t>All SCIM-derived SAML attributes are of type 'xs:string'.</t>
		
	<t>To do: explore defning an actual SAML attribute profile</t>

<t>

<texttable anchor="table_ex" title="SCIM to SAML Mapping">
    <ttcol align='center'>SCIM </ttcol>
    <ttcol align='center'>SAML</ttcol>
    <ttcol align="center">Notes</ttcol>
    
    <c>id</c>
    <c>SCIM.id</c>
    <c></c>
      
    <c>externalId</c>
    <c>SCIM.externalId</c>
    <c>Can't update, insert only</c>
    
    <c>userName</c>
    <c>SCIM.userName</c>
    <c></c>

    <c>name/formatted</c>
    <c>SCIM.name.formatted</c>    <c></c>
    <c>name/familyName</c>
    <c>SCIM.name.familyName</c>    <c></c>
    <c>name/givenName</c>
    <c>SCIM.name.givenName</c>    <c></c>
    <c>name/middleName</c>
    <c>SCIM.name.middleName</c>    <c></c>
    <c>name/honorificPrefix</c>
    <c>SCIM.name.honorificPrefix</c>    <c></c>
    <c>name/honorificSuffix</c>
    <c>SCIM.name.honorificSuffix</c>    <c></c>
    
    <c>displayName</c>
    <c>SCIM.displayName</c>    <c></c>
    
    <c>nickName</c>
    <c>SCIM.nickName</c>    <c></c>

    <c>profileUrl</c>
    <c>SCIM.profileUrl</c>    <c></c>
    
        <c>employeeNumber</c>
    <c>SCIM.employeeNumber</c>    <c></c>    
    
        <c>userType</c>
    <c>SCIM.userType</c>    <c></c>    
    
        <c>title</c>
    <c>SCIM.title</c>    <c></c>    
    
        <c>manager</c>
    <c>SCIM.manager</c>    <c></c>    
    
        <c>preferredLanguage</c>
    <c>SCIM.preferredLanguage</c>    <c></c>    
    
        <c>locale</c>
    <c>SCIM.locale</c>    <c></c>
    
    <c>utcOffset</c>
    <c>SCIM.utcOffset</c>    <c></c>
    
    <c>costCenter</c>
    <c>SCIM.costCenter</c>    <c></c>
    
    <c>organization</c>
    <c>SCIM.organization</c>    <c></c>
    
    <c>division</c>
    <c>SCIM.division</c>    <c></c>
    
    <c>department</c>
    <c>SCIM.department</c>    <c></c>
    
    <c>email</c>
    <c>SCIM.email</c>    <c>multi</c>
    
    <c>phoneNumber</c>
    <c>SCIM.phoneNumber</c>    <c>multi</c>
    
    <c>im</c>
    <c>SCIM.im</c>    <c>multi</c>
    
    <c>photo</c>
    <c>SCIM.photo</c>    <c>multi</c>
    
    <c>address</c>
    <c>SCIM.address</c>    <c>multi</c>
    
    
    <c>address/formatted</c>
    <c>SCIM.address.formatted</c>    <c></c>
    <c>address/streetAddress</c>
    <c>SCIM.address.streetAddress</c>    <c></c>
    <c>address/locality</c>
    <c>SCIM.address.locality</c>    <c></c>
    <c>address/region</c>
    <c>SCIM.address.region</c>    <c></c>
    <c>address/postalCode</c>
    <c>SCIM.address.postalCode</c>    <c></c>
    <c>address/country</c>
    <c>SCIM.address.country</c>    <c></c>
    
    <c>group</c>
    <c>SCIM.group</c>    <c>multi</c>
</texttable>

		</t>
		
		<section title="Supporting multi-value SCIM elements">
		<t>The SCIM core schema supports multi-value elements for emails, addresses etc. SCIM allows individual occurrences of such elements to be categorized by 'type' 
		and 'primary'. </t>
		
		<t>In order to express 'type' and 'primary' on SAML attributes - the corresponding SAML attributes MAY be extended with corresponding XML attributes in a SCIM XML namespace qualified with 
		"http://placeholder.scim.org/2011/schema/extension"  
		</t>
		
		<t>For example:</t>
		
					<t>
			<figure title='Example extension' anchor='extension'>
			<artwork><![CDATA[<saml:Attribute NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified" Name="SCIM.email">
	<saml:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string" scim:type="home" scim:primary="true">
	babsjensen@gmail.com
	</saml:AttributeValue>
</saml:Attribute>]]>
                </artwork>
                </figure>
                
                </t>
                
                <t>When a multi-valued SCIM element has child-elements (e.g. address has streetAddress, postalCode, etc), if the 
                'type' and 'primary' are set on the parent, the 'type' and 'primary' XML attributes MUST be added to each SAML 
                attribute corresponding to the children. </t>
		</section>

<t>Follows is an example of  a set of SCIM attributes expressed in SAML</t>

<t>

    			<figure title='Example of SAML Attributes carrying SCIM info' anchor='assertion'>
			<artwork><![CDATA[<saml:AttributeStatement
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
	xmlns:scim="http://placeholder.scim.org/2011/schema/extension">
	<saml:Attribute NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified" Name="SCIM.userName">
		<saml:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">bjensen@example.com</saml:AttributeValue>
	</saml:Attribute>

	<saml:Attribute NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified" Name="SCIM.name.formatted">
		<saml:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">Ms. Babs J Jensen III</saml:AttributeValue>
	</saml:Attribute>
            	
	<saml:Attribute NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified" Name="SCIM.photo">
		<saml:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string" scim:type="work" scim:primary="true">
		https://photos.example.com/profilephoto/72930000000Ccne/F</saml:AttributeValue>
	</saml:Attribute>
            	
	<saml:Attribute NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified" Name="SCIM.address.formatted">
		<saml:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string" scim:type="work" scim:primary="true">
		100 Universal City Plaza\nHollywood, CA 91608 USA
		</saml:AttributeValue>
	</saml:Attribute>
                	
	<saml:Attribute NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified" Name="SCIM.address.streetAddress">
		<saml:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string" scim:type="work" scim:primary="true">
		100 Universal City Plaza
		</saml:AttributeValue>
	</saml:Attribute>
            	
	<saml:Attribute NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified" Name="SCIM.address.formatted">
		<saml:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string" scim:type="home">
		456 Hollywood Blvd\nHollywood, CA 91608 USA
		</saml:AttributeValue>
	</saml:Attribute>     
            	
	<saml:Attribute NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified" Name="SCIM.address.streetAddress">
		<saml:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string" scim:type="home">
		456 Hollywood Blvd
		</saml:AttributeValue>	
	</saml:Attribute>
</saml:AttributeStatement>]]>
                </artwork>
                </figure>
</t>

	</section>
	
	<section title="Using SAML SSO Assertion attributes to carry SCIM user attributes">
	
	<t>An IdP MAY embed SCIM attributes in SAML Attributes within a SAML SSO Assertion - as per the above mapping.</t>
	
	<t>The SAML SSO Assertion binding can be used to both create a new account at the Service Provider (in which case the Service Provider will not have previously seen the 
	SCIM externalId or userName), or to update an existing account (in which case an account for the corresponding user will already exist.</t>
	
	<t>If the Service Provider determines that it already has an account for a user identified by the SCIM.id attribute, it MUST update all associated SCIM elements with the values of the
	corresponding SAML attributes. For those SAML attributes in the SSO Assertion for which the Service Provider does not have a corresponding SCIM element, it MUST create a new SCIM element with the value of the 
	SAML Attribute.</t>
	</section>
	
	<section title="Using SAML AttributeQuery to retrieve SCIM user attributes">
	<t>An SP can use the SAML AttributeQuery to retrieve SCIM user attributes from the IdP, rather than having them delivered directly in the SAML SSO Assertion.</t>
	
	<t>If the AttributeQuery is initiated by reception of an SSO assertion, the SP MUST use the value of the NameId within that assertion as the value of the NameID within the AttributeQuery to the IdP. </t>

	<t>If not initiated by an SSO assertion, the SP SHOULD use the SCIM.id attribute, or the SCIM.externalId attribute if present, as the value of the NameID.</t>
	
	<t>The SP MAY specify desired attributes in the AttributeQuery.</t>
	
	<t>Shown below is an example SAML AttributeQuery</t>
	
				<t>
			<figure title='Example AttributeQuery' anchor='attributequery'>
			<artwork><![CDATA[<samlp:AttributeQuery
	xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
	xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
	ID="aaf23196-1773-2113-474a-fe114412ab72"
	Version="2.0"
	IssueInstant="2006-07-17T20:31:40Z">
	<saml:Issuer>
	serviceconsumer.com
	</saml:Issuer>
	<saml:Subject>
		<saml:NameID
		NameQualifier="idp.com"
		Format="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent">
		701984
		</saml:NameID>
	</saml:Subject>
	<saml:Attribute
	NameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified"
	Name="SCIM.address.streetAddress">
	</saml:Attribute>
 </samlp:AttributeQuery>]]>
                </artwork>
                </figure>
                
                </t>
	</section>
	
	<section title="Using SAML metadata to advertise supported/desired SCIM attributes">

			<t>The SAML Metadata specification [SAMLMeta] defines a means for information about SAML entities to be represented and communicated 
			securely. This section defines how the SCIM attributes an cloud provider requrires/supports can be expressed in a SAML metadata instance so 
			that enterprises can know to supply them. 
			</t>
			
			<t>A SCIM Service Provider MAY indicate to a Service Consumers the SCIM elements it expects
			in SAML SSO assertions using the RequestedAttribute element in the AssertionConsumingService element of its SAML metadata SPSSODescriptor.</t>
			
			<t>Shown below is an example SAML SPSSODescriptor.</t>
			
			<t>
			<figure title='Example metadata' anchor='metadata'>
			<artwork><![CDATA[<md:SPSSODescriptor>
	<md:AttributeConsumingService index="1" isDefault="true">
		<md:ServiceName xml:lang="en">
        Cloudz 'R' Us
		</md:ServiceName>
		<md:RequestedAttribute name="SCIM.email" isRequired="true"></md:RequestedAttribute>
		<md:RequestedAttribute name="SCIM.address" isRequired="true"></md:RequestedAttribute>
	</md:AttributeConsumingService>
</md:SPSSODescriptor>]]>
                </artwork>
                </figure>
                
                </t>
                
                <p></p>
	</section>
</section>

<section anchor="Security" title="Security Considerations">
<t>TBD</t>
</section>

 <appendix title='Document History'>

        <t>
             draft-scim-saml2-binding-01
              <list style='symbols'>
                <t>
                  Updated to reflect list feedback
                </t>
                <t>Fixed missing SAML namespace in examples</t>
                <t>
                  Clarified terminology
                </t>
                <t>
                  Clarified identifier used in attributeQuery
                </t>

              </list>
        </t>
        <t>
              draft-scim-saml2-binding-01
              <list style='symbols'>
                <t>
                 initial draft
                </t>
              </list>
        </t>
      </appendix>
</middle>                                                                                           


<!--  *****BACK MATTER ***** -->

<back>
<!-- References split into informative and normative -->

<!-- see http://www.rfc-editor.org/policy.html#policy.refs -->

<!-- There are 2 ways to insert reference entries from the citation libraries:
1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
(for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

Both are cited textually in the same manner: by using xref elements.
If you use the PI option, xml2rfc will, by default, try to find included files in the same
directory as the including file. You can also define the XML_LIBRARY environment variable
with a value containing a set of directories to search.  These can be either in the local
filing system or remote ones accessed by http (http://domain/dir/... ).-->

        <references title="Normative References">
            <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml' ?>

            <?rfc include='http://xml.resource.org/public/rfc/bibxml2/reference.OASIS.saml-core-2.0-os.xml' ?>
            <?rfc include='http://xml.resource.org/public/rfc/bibxml2/reference.OASIS.saml-profiles-2.0-os.xml' ?>
            <!--<?rfc include='http://xml.resource.org/public/rfc/bibxml3/reference.I-D.hammer-oauth2.xml' ?>-->

            <reference anchor="scim-core">
                <front>
                    <title abbrev='OAuth2'>Simple Cloud Identity Management: Core Schema 1.0 - draft 1</title>
                    <author initials='C.' surname='Mortimore' fullname='Chuck Mortimore' role='editor'></author>
                    <date year="2011" month="April"/>
                </front>
                <format type='HTML' target='https://sites.google.com/site/clouddir/draft1'/>
            </reference>

        </references>

</back>
</rfc>
